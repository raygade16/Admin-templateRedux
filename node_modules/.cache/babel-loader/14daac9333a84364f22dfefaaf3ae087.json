{"ast":null,"code":"export var apiEndPoint = 'http://localhost:8000/'; // if (window.location.hostname != 'localhost') {\n\napiEndPoint = \"https://hero-api.kesemsolutions.com/\"; // } else {\n// apiEndPoint = \"https://hero-api.kesemsolutions.com/\";\n// }\n\nexport var tokenHeader = 'x-access-token';\nexport var getUserToken = () => {\n  return localStorage.getItem('userToken');\n};\nexport var getUserName = () => {\n  return localStorage.getItem('userName');\n};\nexport var apiLoginUser = apiEndPoint + 'users/authenticate';\nexport var apiOperators = apiEndPoint + 'api/operators';\nexport var apiSprayDevice = apiEndPoint + 'api/sprays';\nexport var apiSessions = apiEndPoint + 'api/sessions';\nexport var apiSessionData = apiEndPoint + 'api/session/data'; // export var apiRinse = apiEndPoint + 'api/rinse';\n\nvar makeTwoDigit = number => {\n  let val = number + '';\n\n  if (val.length == 1) {\n    return '0' + val;\n  } else {\n    return val;\n  }\n};\n\nexport var dateFormat = dateStr => {\n  if (typeof dateStr == 'undefined' || dateStr == undefined || dateStr == 'undefined' || dateStr < 1520160669214) {\n    return \"\";\n  }\n\n  let date = new Date(parseInt(dateStr)); // let ampm = date.getHours() >= 12 ? 'PM' : 'AM';\n\n  return date.toLocaleDateString('em-GB', {\n    day: 'numeric',\n    month: 'short',\n    year: '2-digit'\n  }) + '  ' + makeTwoDigit(date.getHours()) + ':' + makeTwoDigit(date.getMinutes()) + ':' + makeTwoDigit(date.getSeconds()) + ' ';\n};\nexport var toNumber = value => {\n  if (value == 0 || value == \"\") {\n    return 0;\n  }\n\n  let val = parseInt(value);\n\n  if (isNaN(val)) {\n    return \"\";\n  }\n\n  return val;\n};\nexport var toFloat = value => {\n  if (value == 0 || value == \"\") {\n    return 0;\n  }\n\n  let val = parseFloat(value);\n\n  if (isNaN(val)) {\n    return \"\";\n  }\n\n  return val;\n};\nexport var timeFormat = dateStr => {\n  if (typeof dateStr == 'undefined' || dateStr == undefined || dateStr == 'undefined' || dateStr < 1520160669214) {\n    return \"\";\n  }\n\n  let date = new Date(parseInt(dateStr));\n  return date.toLocaleTimeString();\n};","map":{"version":3,"sources":["D:/React-Redux/Admin-template/src/service/Consts.js"],"names":["apiEndPoint","tokenHeader","getUserToken","localStorage","getItem","getUserName","apiLoginUser","apiOperators","apiSprayDevice","apiSessions","apiSessionData","makeTwoDigit","number","val","length","dateFormat","dateStr","undefined","date","Date","parseInt","toLocaleDateString","day","month","year","getHours","getMinutes","getSeconds","toNumber","value","isNaN","toFloat","parseFloat","timeFormat","toLocaleTimeString"],"mappings":"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","sourcesContent":["export var apiEndPoint = 'http://localhost:8000/';\n// if (window.location.hostname != 'localhost') {\n    apiEndPoint = \"https://hero-api.kesemsolutions.com/\";\n// } else {\n    // apiEndPoint = \"https://hero-api.kesemsolutions.com/\";\n// }\n\nexport var tokenHeader = 'x-access-token';\nexport var getUserToken = () => {\n    return localStorage.getItem('userToken');\n}\n\nexport var getUserName = () => {\n    return localStorage.getItem('userName');\n}\n\nexport var apiLoginUser = apiEndPoint + 'users/authenticate';\nexport var apiOperators = apiEndPoint + 'api/operators';\nexport var apiSprayDevice = apiEndPoint + 'api/sprays';\nexport var apiSessions = apiEndPoint + 'api/sessions';\nexport var apiSessionData = apiEndPoint + 'api/session/data';\n// export var apiRinse = apiEndPoint + 'api/rinse';\n\n\n\nvar makeTwoDigit = (number) => {\n    let val = number + '';\n    if (val.length == 1) {\n        return '0' + val;\n    } else {\n        return val;\n    }\n}\nexport var dateFormat = (dateStr) => {\n    if (typeof(dateStr) == 'undefined' || dateStr == undefined || dateStr == 'undefined' || dateStr < 1520160669214) {\n        return \"\";\n    }\n    let date = new Date(parseInt(dateStr));\n    // let ampm = date.getHours() >= 12 ? 'PM' : 'AM';\n    return date.toLocaleDateString('em-GB', { day: 'numeric', month: 'short', year: '2-digit' }) + '  ' + makeTwoDigit(date.getHours()) + ':' + makeTwoDigit(date.getMinutes()) + ':' + makeTwoDigit(date.getSeconds()) + ' ';\n}\n\nexport var toNumber = (value) => {\n    if (value == 0 || value == \"\") {\n        return 0;\n    }\n    let val = parseInt(value);\n    if (isNaN(val)) {\n        return \"\";\n    }\n    return val;\n}\n\nexport var toFloat = (value) => {\n    if (value == 0 || value == \"\") {\n        return 0;\n    }\n    let val = parseFloat(value);\n    if (isNaN(val)) {\n        return \"\";\n    }\n    return val;\n}\n\nexport var timeFormat = (dateStr) => {\n    if (typeof(dateStr) == 'undefined' || dateStr == undefined || dateStr == 'undefined' || dateStr < 1520160669214) {\n        return \"\";\n    }\n    let date = new Date(parseInt(dateStr));\n    return date.toLocaleTimeString();\n}"]},"metadata":{},"sourceType":"module"}