{"ast":null,"code":"var apiEndPoint = \"http://training.pyther.com:3000/customer\";\nexport var getCustomers = () => {\n  return fetch(apiEndPoint, {\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  }).then(response => response.json()).then(response => {\n    console.log(JSON.stringify(response));\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport var addCustomer = customer => {\n  return fetch(apiEndPoint, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(customer)\n  }).then(response => response.json()).then(response => {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport var deleteCustomer = customer => {\n  return fetch(apiEndPoint, {\n    method: 'delete',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(customer)\n  }).then(response => response.json()).then(response => {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport var getCustomerById = id => {\n  return fetch(apiEndPoint + \"/\" + id, {\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  }).then(response => response.json()).then(response => {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport var updateCustomer = customer => {\n  return fetch(apiEndPoint, {\n    method: 'put',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(customer)\n  }).then(response => response.json()).then(response => {\n    return response;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["D:/React-Redux/Admin-template/src/service/CustomerServiceAPI.js"],"names":["apiEndPoint","getCustomers","fetch","method","headers","then","response","json","console","log","JSON","stringify","catch","error","addCustomer","customer","body","deleteCustomer","getCustomerById","id","updateCustomer"],"mappings":"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","sourcesContent":["var apiEndPoint = \"http://training.pyther.com:3000/customer\";\r\nexport var getCustomers = () =>{\r\n    return fetch(apiEndPoint, {\r\n        method: 'get',\r\n            headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n              }\r\n        })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(JSON.stringify(response));\r\n        return(response);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport var addCustomer = (customer) =>{\r\n    return fetch(apiEndPoint, {\r\n        method: 'post',\r\n            headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n              },\r\n              body:JSON.stringify(customer)\r\n        })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        return(response);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport var deleteCustomer = (customer) =>{\r\n    return fetch(apiEndPoint, {\r\n        method: 'delete',\r\n            headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n              },\r\n              body:JSON.stringify(customer)\r\n        })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        return(response);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n}\r\nexport var getCustomerById =  (id) =>{\r\n    return fetch(apiEndPoint+\"/\"+id, {\r\n        method: 'get',\r\n            headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n              }\r\n        })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        return(response);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n}\r\nexport var updateCustomer = (customer) =>{\r\n    return fetch(apiEndPoint, {\r\n        method: 'put',\r\n            headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n              },\r\n              body:JSON.stringify(customer)\r\n        })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        return(response);\r\n        }).catch(function(error) {\r\n            console.log(error);\r\n        });\r\n}"]},"metadata":{},"sourceType":"module"}